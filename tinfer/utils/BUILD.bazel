load("@rules_cuda//cuda:defs.bzl", "cuda_library")

package(
    default_visibility = ["//visibility:public"],
)

cc_library(
    name = "vocab_utils",
    srcs = ["vocab_utils.cc"],
    hdrs = [
        "vocab_utils.h",
    ],
    deps = [
        "@com_google_absl//absl/container:node_hash_map",
    ],
)

cc_library(
    name = "cuda_allocator",
    hdrs = [
        "cuda_allocator.h",
    ],
    deps = [
    ],
)

cc_library(
    name = "cleanup",
    hdrs = [
        "cleanup.h",
    ],
    deps = [
    ],
)

cc_library(
    name = "regex_split",
    srcs = ["regex_split.cc"],
    hdrs = [
        "regex_split.h",
    ],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_re2//:re2",
    ],
)

cuda_library(
    name = "cuda_utils",
    srcs = ["cuda_utils.cu"],
    hdrs = [
        "cuda_type_utils.cuh",
        "cuda_utils.h",
    ],
    deps = [
        "//tinfer/log",
    ],
)

cuda_library(
    name = "mem_utils",
    srcs = ["mem_utils.cu"],
    hdrs = ["mem_utils.h"],
    deps = [
        ":cuda_utils",
        "//tinfer/log",
    ],
)

cc_library(
    name = "activation_types",
    hdrs = [
        "activation_types.h",
    ],
    deps = [
        ":cuda_utils",
        "//tinfer/log",
    ],
)

cc_library(
    name = "cublas_algo_map",
    srcs = ["cublas_algo_map.cc"],
    hdrs = [
        "cublas_algo_map.h",
    ],
    deps = [
        ":cuda_utils",
    ],
)

cc_library(
    name = "cublas_wrapper",
    srcs = ["cublas_wrapper.cc"],
    hdrs = [
        "cublas_wrapper.h",
    ],
    deps = [
        ":cublas_algo_map",
        ":cuda_allocator",
        ":cuda_utils",
    ],
)
